---
import "./embla.css";
import { type Testimonial } from "../Section-4.astro";
import { type HTMLAttributes } from "astro/types";

interface Props extends HTMLAttributes<"div"> {
    testimonials: Testimonial[];
}

const { testimonials, ...rest } = Astro.props;
---

<div class="embla" {...rest}>
    <div class="embla__viewport">
        <div class="embla__container">
            <div class="embla__slide">
                <img
                    class="embla__slide__img"
                    src="https://picsum.photos/600/350?v=1"
                    alt="Your alt text"
                />
            </div>
            <div class="embla__slide">
                <img
                    class="embla__slide__img"
                    src="https://picsum.photos/600/350?v=2"
                    alt="Your alt text"
                />
            </div>
            <div class="embla__slide">
                <img
                    class="embla__slide__img"
                    src="https://picsum.photos/600/350?v=3"
                    alt="Your alt text"
                />
            </div>
            <div class="embla__slide">
                <img
                    class="embla__slide__img"
                    src="https://picsum.photos/600/350?v=4"
                    alt="Your alt text"
                />
            </div>
            <div class="embla__slide">
                <img
                    class="embla__slide__img"
                    src="https://picsum.photos/600/350?v=5"
                    alt="Your alt text"
                />
            </div>
        </div>
    </div>

    <div class="embla__controls">
        <div class="embla__buttons">
            <button
                class="embla__button embla__button--prev"
                type="button"
                disabled=""
            >
                <svg class="embla__button__svg" viewBox="0 0 532 532">
                    <path
                        fill="currentColor"
                        d="M355.66 11.354c13.793-13.805 36.208-13.805 50.001 0 13.785 13.804 13.785 36.238 0 50.034L201.22 266l204.442 204.61c13.785 13.805 13.785 36.239 0 50.044-13.793 13.796-36.208 13.796-50.002 0a5994246.277 5994246.277 0 0 0-229.332-229.454 35.065 35.065 0 0 1-10.326-25.126c0-9.2 3.393-18.26 10.326-25.2C172.192 194.973 332.731 34.31 355.66 11.354Z"
                    ></path>
                </svg></button
            ><button
                class="embla__button embla__button--next"
                type="button"
                disabled=""
            >
                <svg class="embla__button__svg" viewBox="0 0 532 532">
                    <path
                        fill="currentColor"
                        d="M176.34 520.646c-13.793 13.805-36.208 13.805-50.001 0-13.785-13.804-13.785-36.238 0-50.034L330.78 266 126.34 61.391c-13.785-13.805-13.785-36.239 0-50.044 13.793-13.796 36.208-13.796 50.002 0 22.928 22.947 206.395 206.507 229.332 229.454a35.065 35.065 0 0 1 10.326 25.126c0 9.2-3.393 18.26-10.326 25.2-45.865 45.901-206.404 206.564-229.332 229.52Z"
                    ></path>
                </svg>
            </button>
        </div>
        <div class="embla__dots"></div>
    </div>
</div>

<script>
    import EmblaCarousel, { type EmblaOptionsType } from "embla-carousel";
    import AutoScroll from "embla-carousel-auto-scroll";
    import { addPrevNextBtnsClickHandlers } from "./EmblaCarouselArrowButtons";
    import { setupTweenOpacity } from "./EmblaCarouselTweenOpacity";

    const AUTOSCROLLTIMEOUTTIME = 200;
    const OPTIONS: EmblaOptionsType = { loop: true };

    const emblaNode = document.querySelector(".embla") as HTMLElement;
    const viewportNode = emblaNode.querySelector(
        ".embla__viewport"
    ) as HTMLElement;
    const prevBtn = emblaNode.querySelector(
        ".embla__button--prev"
    ) as HTMLElement;
    const nextBtn = emblaNode.querySelector(
        ".embla__button--next"
    ) as HTMLElement;

    // Instancia el carrusel y el plugin de autoscroll
    const autoScrollPlugin = AutoScroll({ playOnInit: true, speed: 1.5 });
    const emblaApi = EmblaCarousel(viewportNode, OPTIONS,
    [autoScrollPlugin]

);

    // --- NUEVO: Iniciar en el segundo slide ---
    emblaApi.scrollTo(1);

    // --- NUEVO: Tween Opacity & Scale ---
    const removeTweenOpacity = setupTweenOpacity(emblaApi);

    const removePrevNextBtnsClickHandlers = addPrevNextBtnsClickHandlers(
        emblaApi,
        prevBtn,
        nextBtn
    );

    // --- NUEVO: Pausar y reanudar autoscroll tras 5s de inactividad ---
    let autoScrollTimeout: ReturnType<typeof setTimeout> | null = null;

    function pauseAndResumeAutoScroll() {
        emblaApi.plugins().autoScroll?.stop();
        if (autoScrollTimeout) clearTimeout(autoScrollTimeout);
        autoScrollTimeout = setTimeout(() => {
            emblaApi.plugins().autoScroll?.play();
        }, AUTOSCROLLTIMEOUTTIME);
    }

    prevBtn.addEventListener("click", pauseAndResumeAutoScroll);
    nextBtn.addEventListener("click", pauseAndResumeAutoScroll);
</script>

<style>
    .embla__container {
        display: flex;
        user-select: none;
        -webkit-touch-callout: none;
        -webkit-tap-highlight-color: transparent;
        margin-left: 0;
        margin-right: 0;
    }

    .embla__slide {
        flex: 0 0 80%; /* Cambia de 100% a 80% para mostrar parte del siguiente slide */
        min-width: 0;
        position: relative;
        transition: transform 0.3s, opacity 0.3s;
    }

    .embla__slide__img {
        display: block;
        width: 100%;
        height: auto;
        pointer-events: none;
        user-select: none;
    }
</style>
