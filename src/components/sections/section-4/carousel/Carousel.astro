---
import "./embla.css";
import { type Testimonial } from "../Section-4.astro";
import TestimonialCards from "../TestimonialCards.astro";
interface Props {
    testimonials: Testimonial[];
}

const { testimonials } = Astro.props as Props;
---

<div class="embla">
    <div class="embla__viewport">
        <div class="embla__container">
            {
                testimonials.map((testimonial) => (
                    <div class="embla__slide">
                        <div class="embla__slide__number">
                            <TestimonialCards
                                name={testimonial.name}
                                content={testimonial.content}
                                company={testimonial.company}
                            />
                        </div>
                    </div>
                ))
            }
        </div>
    </div>
    <div class="embla__controls">
        <div class="embla__buttons">
            <button
                class="embla__button embla__button--prev"
                type="button"
                disabled=""
            >
                <svg class="embla__button__svg" viewBox="0 0 532 532">
                    <path
                        fill="currentColor"
                        d="M355.66 11.354c13.793-13.805 36.208-13.805 50.001 0 13.785 13.804 13.785 36.238 0 50.034L201.22 266l204.442 204.61c13.785 13.805 13.785 36.239 0 50.044-13.793 13.796-36.208 13.796-50.002 0a5994246.277 5994246.277 0 0 0-229.332-229.454 35.065 35.065 0 0 1-10.326-25.126c0-9.2 3.393-18.26 10.326-25.2C172.192 194.973 332.731 34.31 355.66 11.354Z"
                    ></path>
                </svg></button
            ><button
                class="embla__button embla__button--next"
                type="button"
                disabled=""
            >
                <svg class="embla__button__svg" viewBox="0 0 532 532">
                    <path
                        fill="currentColor"
                        d="M176.34 520.646c-13.793 13.805-36.208 13.805-50.001 0-13.785-13.804-13.785-36.238 0-50.034L330.78 266 126.34 61.391c-13.785-13.805-13.785-36.239 0-50.044 13.793-13.796 36.208-13.796 50.002 0 22.928 22.947 206.395 206.507 229.332 229.454a35.065 35.065 0 0 1 10.326 25.126c0 9.2-3.393 18.26-10.326 25.2-45.865 45.901-206.404 206.564-229.332 229.52Z"
                    ></path>
                </svg>
            </button>
        </div>
        <div class="embla__dots"></div>
    </div>
</div>

<script>
    import EmblaCarousel, { type EmblaOptionsType } from "embla-carousel";
    import { setupTweenScale } from "./EmblaCarouselTweenScale";
    import { addDotBtnsAndClickHandlers } from "./EmblaCarouselDotButton";
    import { addPrevNextBtnsClickHandlers } from "./EmblaCarouselArrowButtons";
    import { setupTweenOpacity } from "./EmblaCarouselTweenOpacity";
    import Autoplay from "embla-carousel-autoplay";

    const AUTOSCROLLTIMEOUTTIME = 200;
    const OPTIONS: EmblaOptionsType = { loop: true };

    const emblaNode = document.querySelector(".embla") as HTMLElement;
    const viewportNode = emblaNode.querySelector(
        ".embla__viewport"
    ) as HTMLElement;
    const prevBtn = emblaNode.querySelector(
        ".embla__button--prev"
    ) as HTMLElement;
    const nextBtn = emblaNode.querySelector(
        ".embla__button--next"
    ) as HTMLElement;
    const dotsNode = document.querySelector(".embla__dots") as HTMLElement;

    const emblaApi = EmblaCarousel(viewportNode, OPTIONS, [
        Autoplay({ delay: 1500 })
    ]);
    let autoScrollTimeout: ReturnType<typeof setTimeout> | null = null;

    function pauseAndResumeAutoScroll() {
        const autoplay = emblaApi.plugins().autoplay as Autoplay;
        autoplay.stop();
        if (autoScrollTimeout) clearTimeout(autoScrollTimeout);
        autoScrollTimeout = setTimeout(() => {
            autoplay.play();
        }, AUTOSCROLLTIMEOUTTIME);
    }

    prevBtn.addEventListener("click", pauseAndResumeAutoScroll);
    nextBtn.addEventListener("click", pauseAndResumeAutoScroll);

    const removeTweenScale = setupTweenScale(emblaApi);
    const removeTweenOpacity = setupTweenOpacity(emblaApi);

    const removePrevNextBtnsClickHandlers = addPrevNextBtnsClickHandlers(
        emblaApi,
        prevBtn,
        nextBtn
    );
    const removeDotBtnsAndClickHandlers = addDotBtnsAndClickHandlers(
        emblaApi,
        dotsNode
    );

    emblaApi
        .on("destroy", removeTweenScale)
        .on("destroy", removePrevNextBtnsClickHandlers)
        .on("destroy", removeDotBtnsAndClickHandlers)
        .on("scroll", pauseAndResumeAutoScroll)
        .on("destroy", removeTweenOpacity);
</script>
